// jamHelpers.jsxinc v4.0 (minified)
if(typeof jamHelpers!=='object') {var jamHelpers={};(function() {jamHelpers.toColorObject=function(color) {var colorObject;if(color.constructor===Object) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue;switch(key) {case"book":case"name":typedValue=["<string>",localize(value)];break;case"bookKey":typedValue=["<data>",value];break;case"bookID":typedValue=["<integer>",value];break;case"a":case"b":case"black":case"blue":case"brightness":case"cyan":case"gray":case"green":case"luminance":case"magenta":case"red":case"saturation":case"yellowColor":typedValue=["<double>",value];break;case"hue":typedValue=["<unitDouble>",["angleUnit",value]];break;case"color":var colorClass;if((("book"in value)&&("name"in value))||(("bookID"in value)&&("bookKey"in value))) {colorClass="bookColor";} else if(("cyan"in value)&&("magenta"in value)&&("yellowColor"in value)&&("black"in value)) {colorClass="CMYKColorClass";} else if("gray"in value) {colorClass="grayscale";} else if(("hue"in value)&&("saturation"in value)&&("brightness"in value)) {colorClass="HSBColorClass";} else if(("luminance"in value)&&("a"in value)&&("b"in value)) {colorClass="labColor";} else if(("red"in value)&&("green"in value)&&("blue"in value)) {colorClass="RGBColor";} typedValue=["<object>",[colorClass,restoreDesc(value)]];break;default:typedValue=null;break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} colorObject=restoreDesc({"color":color})["color"];} else if(color.constructor===Array) {var colorClass=color[0];switch(jamEngine.uniIdStrToId(colorClass)) {case jamEngine.uniIdStrToId("bookColor"):switch(color[1].length) {case 2:if(typeof color[1][0]==='string') {colorObject=["<object>",["bookColor",{"book":["<string>",color[1][0]],"name":["<string>",color[1][1]]}]];} else if(typeof color[1][0]==='number') {colorObject=["<object>",["bookColor",{"bookID":["<integer>",color[1][0]],"bookKey":["<data>",color[1][1]]}]];} break;case 4:colorObject=["<object>",["bookColor",{"book":["<string>",color[1][0]],"name":["<string>",color[1][1]],"bookID":["<integer>",color[1][2]],"bookKey":["<data>",color[1][3]]}]];break;} break;case jamEngine.uniIdStrToId("CMYKColorClass"):colorObject=["<object>",["CMYKColorClass",{"cyan":["<double>",color[1][0]],"magenta":["<double>",color[1][1]],"yellowColor":["<double>",color[1][2]],"black":["<double>",color[1][3]]}]];break;case jamEngine.uniIdStrToId("grayscale"):colorObject=["<object>",["grayscale",{"gray":["<double>",(color[1].constructor===Array)?color[1][0]:color[1]]}]];break;case jamEngine.uniIdStrToId("HSBColorClass"):colorObject=["<object>",["HSBColorClass",{"hue":["<unitDouble>",["angleUnit",color[1][0]]],"saturation":["<double>",color[1][1]],"brightness":["<double>",color[1][2]]}]];break;case jamEngine.uniIdStrToId("labColor"):colorObject=["<object>",["labColor",{"luminance":["<double>",color[1][0]],"a":["<double>",color[1][1]],"b":["<double>",color[1][2]]}]];break;case jamEngine.uniIdStrToId("RGBColor"):colorObject=["<object>",["RGBColor",{"red":["<double>",color[1][0]],"green":["<double>",color[1][1]],"blue":["<double>",color[1][2]]}]];break;default:throw new Error("\n[jamHelpers.toColorObject] Unrecognized color class: "+colorClass);break;}} return colorObject;};jamHelpers.fromColorObject=function(colorObject,explicit) {var color;if(explicit) {color=jamEngine.simplifyObject(colorObject);} else {var normalizedColorObject=jamEngine.normalizeJsonItem(colorObject,{meaningfulIds:true,parseFriendly:true});var colorClass=normalizedColorObject[1][0];var colorDesc=normalizedColorObject[1][1];switch(colorClass) {case"bookColor":var book=colorDesc["book"][1];var name=colorDesc["name"][1];if(("bookID"in colorDesc)&&("bookKey"in colorDesc)) {var bookID=colorDesc["bookID"][1];var bookKey=colorDesc["bookKey"][1];color=[colorClass,[book,name,bookID,bookKey]];} else {color=[colorClass,[book,name]];} break;case"CMYKColorClass":var cyan=colorDesc["cyan"][1];var magenta=colorDesc["magenta"][1];var yellowColor=colorDesc["yellowColor"][1];var black=colorDesc["black"][1];color=[colorClass,[cyan,magenta,yellowColor,black]];break;case"grayscale":var gray=colorDesc["gray"][1];color=[colorClass,[gray]];break;case"HSBColorClass":var hue=colorDesc["hue"][1][1];var saturation=colorDesc["saturation"][1];var brightness=colorDesc["brightness"][1];color=[colorClass,[hue,saturation,brightness]];break;case"labColor":var luminance=colorDesc["luminance"][1];var a=colorDesc["a"][1];var b=colorDesc["b"][1];color=[colorClass,[luminance,a,b]];break;case"RGBColor":var red=colorDesc["red"][1];var green=colorDesc["green"][1];var blue=colorDesc["blue"][1];color=[colorClass,[red,green,blue]];break;default:throw new Error("\n[jamHelpers.fromColorObject] Unrecognized color class: "+colorClass);break;}} return color;};jamHelpers.toGradientObject=function(gradient) {var gradientObject;if(gradient.constructor===Object) {var that=this;function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue;var restoredList;switch(key) {case"showTransparency":case"vectorColor":typedValue=["<boolean>",value];break;case"name":typedValue=["<string>",localize(value)];break;case"gradientForm":typedValue=["<enumerated>",["gradientForm",value]];break;case"type":typedValue=["<enumerated>",["colorStopType",value]];break;case"colorSpace":typedValue=["<enumerated>",["colorSpace",value]];break;case"location":case"midpoint":case"randomSeed":case"smoothness":typedValue=["<integer>",value];break;case"interpolation":typedValue=["<double>",value];break;case"opacity":typedValue=["<unitDouble>",["percentUnit",value]];break;case"colors":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["colorStop",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"transparency":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["transparencyStop",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"minimum":case"maximum":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<integer>",value[i]]);} typedValue=["<list>",restoredList];break;case"color":typedValue=that.toColorObject(value);break;case"gradient":typedValue=["<object>",["gradientClassEvent",restoreDesc(value)]];break;default:typedValue=null;break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} gradientObject=restoreDesc({"gradient":gradient})["gradient"];} else if(gradient.constructor===Array) {var gradientObj={};var gradientName=gradient[0];if(gradientName) {gradientObj["name"]=["<string>",gradientName];} var gradientForm=gradient[1];gradientObj["gradientForm"]=["<enumerated>",["gradientForm",gradientForm]];switch(jamEngine.uniIdStrToId(gradientForm)) {case jamEngine.uniIdStrToId("customStops"):gradientObj["interpolation"]=["<double>",gradient[2]];var colorStops=gradient[3];var colorsArr=[];for(var i=0;i<colorStops.length;i++) {var colorStopObj={};colorStopObj["location"]=["<integer>",colorStops[i][0]];colorStopObj["midpoint"]=["<integer>",colorStops[i][1]];var type=colorStops[i][2];colorStopObj["type"]=["<enumerated>",["colorStopType",type]];switch(jamEngine.uniIdStrToId(type)) {case jamEngine.uniIdStrToId("userStop"):colorStopObj["color"]=this.toColorObject(colorStops[i][3]);break;case jamEngine.uniIdStrToId("backgroundColor"):case jamEngine.uniIdStrToId("foregroundColor"):break;default:throw new Error("\n[jamHelpers.toGradientObject] Unrecognized color stop type: "+type);break;} colorsArr.push(["<object>",["colorStop",colorStopObj]]);} gradientObj["colors"]=["<list>",colorsArr];var transparencyStops=gradient[4];if(typeof transparencyStops!=='undefined') {var transparencyArr=[];for(var j=0;j<transparencyStops.length;j++) {var transparencyStopObj={};transparencyStopObj["location"]=["<integer>",transparencyStops[j][0]];transparencyStopObj["midpoint"]=["<integer>",transparencyStops[j][1]];transparencyStopObj["opacity"]=["<unitDouble>",["percentUnit",transparencyStops[j][2]]];transparencyArr.push(["<object>",["transparencyStop",transparencyStopObj]]);} gradientObj["transparency"]=["<list>",transparencyArr];} break;case jamEngine.uniIdStrToId("colorNoise"):gradientObj["randomSeed"]=["<integer>",gradient[2]];gradientObj["showTransparency"]=["<boolean>",gradient[3]];gradientObj["vectorColor"]=["<boolean>",gradient[4]];gradientObj["smoothness"]=["<integer>",gradient[5]];var colorSpace=gradient[6];gradientObj["colorSpace"]=["<enumerated>",["colorSpace",colorSpace]];switch(jamEngine.uniIdStrToId(colorSpace)) {case jamEngine.uniIdStrToId("RGBColor"):case jamEngine.uniIdStrToId("HSBColorEnum"):case jamEngine.uniIdStrToId("labColor"):break;default:throw new Error("\n[jamHelpers.toGradientObject] Unrecognized color space: "+colorSpace);break;} gradientObj["minimum"]=this.toIntegerList(gradient[7]);gradientObj["maximum"]=this.toIntegerList(gradient[8]);break;default:throw new Error("\n[jamHelpers.toGradientObject] Unrecognized gradient form: "+gradientForm);break;} gradientObject=["<object>",["gradientClassEvent",gradientObj]];} return gradientObject;};jamHelpers.fromGradientObject=function(gradientObject,explicit) {var gradient;if(explicit) {gradient=jamEngine.simplifyObject(gradientObject);} else {gradient=[];var normalizedGradientObject=jamEngine.normalizeJsonItem(gradientObject,{meaningfulIds:true,parseFriendly:true});var gradientDesc=normalizedGradientObject[1][1];var name=gradientDesc["name"];gradient.push((name)?name[1]:null);var gradientForm=gradientDesc["gradientForm"][1][1];gradient.push(gradientForm);switch(gradientForm) {case"customStops":gradient.push(gradientDesc["interpolation"][1]);var colors=gradientDesc["colors"][1];var colorStops=[];for(var i=0;i<colors.length;i++) {var colorStop=colors[i][1][1];var colorStopArr=[];colorStopArr.push(colorStop["location"][1]);colorStopArr.push(colorStop["midpoint"][1]);var type=colorStop["type"][1][1];colorStopArr.push(type);switch(type) {case"userStop":colorStopArr.push(this.fromColorObject(colorStop["color"]));break;case"backgroundColor":case"foregroundColor":break;default:throw new Error("\n[jamHelpers.fromGradientObject] Unrecognized color stop type: "+type);break;} colorStops.push(colorStopArr);} gradient.push(colorStops);var transparency=gradientDesc["transparency"][1];var transparencyStops=[];for(var j=0;j<transparency.length;j++) {var transparencyStop=transparency[j][1][1];var transparencyStopArr=[];transparencyStopArr.push(transparencyStop["location"][1]);transparencyStopArr.push(transparencyStop["midpoint"][1]);transparencyStopArr.push(transparencyStop["opacity"][1][1]);transparencyStops.push(transparencyStopArr);} gradient.push(transparencyStops);break;case"colorNoise":gradient.push(gradientDesc["randomSeed"][1]);gradient.push(gradientDesc["showTransparency"][1]);gradient.push(gradientDesc["vectorColor"][1]);gradient.push(gradientDesc["smoothness"][1]);var colorSpace=gradientDesc["colorSpace"][1][1] gradient.push(colorSpace);switch(colorSpace) {case"RGBColor":case"HSBColorEnum":case"labColor":break;default:throw new Error("\n[jamHelpers.fromGradientObject] Unrecognized color space: "+colorSpace);break;} gradient.push(this.fromIntegerList(gradientDesc["minimum"]));gradient.push(this.fromIntegerList(gradientDesc["maximum"]));break;default:throw new Error("\n[jamHelpers.fromGradientObject] Unrecognized gradient form: "+gradientForm);break;}} return gradient;};jamHelpers.toCurvesAdjustmentList=function(curvesAdjustmentsArr) {var curvesAdjustmentListArr=[];for(var i=0;i<curvesAdjustmentsArr.length;i++) {var curvesAdjustment=curvesAdjustmentsArr[i];var channel=["<reference>",[["channel",["<enumerated>",["channel",curvesAdjustment[0]]]]]];var info=curvesAdjustment[1];var type=info[0];var points=info[1];var pointArr=[];switch(jamEngine.uniIdStrToId(type)) {case jamEngine.uniIdStrToId("mapping"):for(var j=0;j<points.length;j++) {pointArr.push(["<integer>",points[j]]);} var mapping=["<list>",pointArr];curvesAdjustmentListArr.push(["<object>",["curvesAdjustment",{"channel":channel,"mapping":mapping}]]);break;case jamEngine.uniIdStrToId("curve"):for(var j=0;j<points.length;j++) {var point=["<object>",["point",{"horizontal":["<double>",points[j][0]],"vertical":["<double>",points[j][1]]}]];pointArr.push(point);} var curve=["<list>",pointArr];curvesAdjustmentListArr.push(["<object>",["curvesAdjustment",{"channel":channel,"curve":curve}]]);break;default:throw new Error("\n[jamHelpers.toCurvesAdjustmentList] Unrecognized curve type");break;}} return["<list>",curvesAdjustmentListArr];};jamHelpers.toHueSatAdjustmentV2List=function(hueSatAdjustmentsArr) {var hueSatAdjustmentListArr=[];for(var i=0;i<hueSatAdjustmentsArr.length;i++) {var hueSatAdjustmentArr=hueSatAdjustmentsArr[i];var hueSatAdjustmentObj;if((hueSatAdjustmentArr.length===3)&&(i===0)) {hueSatAdjustmentObj={"hue":["<integer>",hueSatAdjustmentArr[0]],"saturation":["<integer>",hueSatAdjustmentArr[1]],"lightness":["<integer>",hueSatAdjustmentArr[2]]};} else if(hueSatAdjustmentArr.length===(1+4+3)) {hueSatAdjustmentObj={"localRange":["<integer>",hueSatAdjustmentArr[0]],"beginRamp":["<integer>",hueSatAdjustmentArr[1]],"beginSustain":["<integer>",hueSatAdjustmentArr[2]],"endSustain":["<integer>",hueSatAdjustmentArr[3]],"endRamp":["<integer>",hueSatAdjustmentArr[4]],"hue":["<integer>",hueSatAdjustmentArr[5]],"saturation":["<integer>",hueSatAdjustmentArr[6]],"lightness":["<integer>",hueSatAdjustmentArr[7]]};} hueSatAdjustmentListArr.push(["<object>",["hueSatAdjustmentV2",hueSatAdjustmentObj]]);} return["<list>",hueSatAdjustmentListArr];};jamHelpers.toBlendRangeList=function(blendRanges) {var blendRangeListArr=[];var blendRangeObject;for(var i=0;i<blendRanges.length;i++) {var blendRange=blendRanges[i];if(blendRange.constructor===Object) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue;switch(key) {case"channel":typedValue=["<reference>",[["channel",["<enumerated>",["channel",value]]]]];break;case"srcBlackMin":case"srcBlackMax":case"srcWhiteMin":case"srcWhiteMax":case"destBlackMin":case"destBlackMax":case"destWhiteMin":case"destWhiteMax":typedValue=["<integer>",value];break;case"blendRange":typedValue=["<object>",["blendRange",restoreDesc(value)]];break;default:typedValue=null;break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} blendRangeObject=restoreDesc({"blendRange":blendRange})["blendRange"];} else if(blendRange.constructor===Array) {blendRangeObject=["<object>",["blendRange",{"channel":["<reference>",[["channel",["<enumerated>",["channel",blendRange[0]]]]]],"srcBlackMin":["<integer>",blendRange[1]],"srcBlackMax":["<integer>",blendRange[2]],"srcWhiteMin":["<integer>",blendRange[3]],"srcWhiteMax":["<integer>",blendRange[4]],"destBlackMin":["<integer>",blendRange[5]],"destBlackMax":["<integer>",blendRange[6]],"destWhiteMin":["<integer>",blendRange[7]],"destWhiteMax":["<integer>",blendRange[8]]}]];} blendRangeListArr.push(blendRangeObject);} return["<list>",blendRangeListArr];};jamHelpers.fromBlendRangeList=function(blendRangeList,explicit) {var blendRanges;if(explicit) {var replaceChannelHook=function(desc,key,getDefaultValue) {var replacedValue=undefined;if(key==="channel") {var value=getDefaultValue(desc,key);replacedValue=value[0]["channel"];} return replacedValue;};blendRanges=jamEngine.simplifyList(blendRangeList,replaceChannelHook);} else {blendRanges=[];var normalizedBlendRangeList=jamEngine.normalizeJsonItem(blendRangeList,{meaningfulIds:true,parseFriendly:true});for(index=0;index<normalizedBlendRangeList[1].length;index++) {var blendRange=normalizedBlendRangeList[1][index][1][1];var blendRangeArr=[blendRange["channel"][1][0][1][1][1],blendRange["srcBlackMin"][1],blendRange["srcBlackMax"][1],blendRange["srcWhiteMin"][1],blendRange["srcWhiteMax"][1],blendRange["destBlackMin"][1],blendRange["destBlackMax"][1],blendRange["destWhiteMin"][1],blendRange["destWhiteMax"][1]];blendRanges.push(blendRangeArr);}} return blendRanges;};jamHelpers.toIntegerList=function(integersArr) {var integerListArr=[];for(var i=0;i<integersArr.length;i++) {integerListArr.push(["<integer>",integersArr[i]]);} return["<list>",integerListArr];};jamHelpers.fromIntegerList=function(integerList) {var normalizedIntegerList=jamEngine.normalizeJsonItem(integerList,{meaningfulIds:true,parseFriendly:true});var integersArr=[];var integers=normalizedIntegerList[1];for(var i=0;i<integers.length;i++) {integersArr.push(integers[i][1]);} return integersArr;};function toUnitDouble(value,unit) {return(typeof unit==='undefined')?["<double>",value]:["<unitDouble>",[unit,value]];} jamHelpers.toPointObject=function(pointArr) {var data=pointArr[0];var unit=pointArr[1];var pointObject=["<object>",["point",{"horizontal":toUnitDouble(data[0],unit),"vertical":toUnitDouble(data[1],unit)}]];return pointObject;};jamHelpers.toPointList=function(pointsArr) {var data=pointsArr[0];var unit=pointsArr[1];var pointListArr=[];for(var i=0;i<data.length;i++) {pointListArr.push (["<object>",["point",{"horizontal":toUnitDouble(data[i][0],unit),"vertical":toUnitDouble(data[i][1],unit)}]]);} return["<list>",pointListArr];};jamHelpers.fromPointList=function(pointList) {var pointsArr=[];var normalizedPointList=jamEngine.normalizeJsonItem(pointList,{meaningfulIds:true,parseFriendly:true});var data=[];var unit;function getValue(coordinate) {var value;switch(coordinate[0]) {case"<unitDouble>":unit=coordinate[1][0];value=coordinate[1][1];break;case"<double>":unit=undefined;value=coordinate[1];break;} return value;} var pointListArr=normalizedPointList[1];for(var i=0;i<pointListArr.length;i++) {data.push([getValue(pointListArr[i][1][1]["horizontal"]),getValue(pointListArr[i][1][1]["vertical"])]);} pointsArr.push(data);if(unit) {pointsArr.push(unit);} return pointsArr;};jamHelpers.toOffsetObject=function(offsetArr) {var data=offsetArr[0];var unit=offsetArr[1];var offsetObject=["<object>",["offset",{"horizontal":toUnitDouble(data[0],unit),"vertical":toUnitDouble(data[1],unit)}]];return offsetObject;};jamHelpers.toRectangleObject=function(rectangleArr) {var data=rectangleArr[0];var unit=rectangleArr[1];var rectangleObj={"left":toUnitDouble(data[0],unit),"top":toUnitDouble(data[1],unit),"right":toUnitDouble(data[2],unit),"bottom":toUnitDouble(data[3],unit)};if(data.length===5) {rectangleObj["radius"]=toUnitDouble(data[4],unit);} return["<object>",["rectangle",rectangleObj]];};jamHelpers.toEllipseObject=function(ellipseArr) {var data=ellipseArr[0];var unit=ellipseArr[1];var ellipseObject=["<object>",["ellipse",{"left":toUnitDouble(data[0],unit),"top":toUnitDouble(data[1],unit),"right":toUnitDouble(data[2],unit),"bottom":toUnitDouble(data[3],unit)}]];return ellipseObject;};jamHelpers.toCustomShapeObject=function(customShapeArr) {var data=customShapeArr[0];var unit=customShapeArr[1];var customShapeObject=["<object>",["customShape",{"name":["<string>",data[0]],"left":toUnitDouble(data[1],unit),"top":toUnitDouble(data[2],unit),"right":toUnitDouble(data[3],unit),"bottom":toUnitDouble(data[4],unit)}]];return customShapeObject;};jamHelpers.toCurvePointList=function(curvePoints) {var curvePointListArr=[];var curvePointObject;for(var i=0;i<curvePoints.length;i++) {var curvePoint=curvePoints[i];if(curvePoint.constructor===Object) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue;switch(key) {case"continuity":typedValue=["<boolean>",value];break;case"horizontal":case"vertical":typedValue=["<double>",value];break;case"curvePoint":typedValue=["<object>",["curvePoint",restoreDesc(value)]];break;default:typedValue=null;break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} curvePointObject=restoreDesc({"curvePoint":curvePoint})["curvePoint"];} else if(curvePoint.constructor===Array) {switch(curvePoint.length) {case 2:curvePointObject=["<object>",["curvePoint",{"horizontal":["<double>",curvePoint[0]],"vertical":["<double>",curvePoint[1]]}]];break;case 3:curvePointObject=["<object>",["curvePoint",{"horizontal":["<double>",curvePoint[0]],"vertical":["<double>",curvePoint[1]],"continuity":["<boolean>",curvePoint[2]]}]];break;}} curvePointListArr.push(curvePointObject);} return["<list>",curvePointListArr];};jamHelpers.fromCurvePointList=function(curvePointList,explicit) {var curvePoints;if(explicit) {curvePoints=jamEngine.simplifyList(curvePointList);} else {curvePoints=[];var normalizedCurvePointList=jamEngine.normalizeJsonItem(curvePointList,{meaningfulIds:true,parseFriendly:true});for(index=0;index<normalizedCurvePointList[1].length;index++) {var curvePoint=normalizedCurvePointList[1][index][1][1];var curvePointArr=[curvePoint["horizontal"][1],curvePoint["vertical"][1]];if("continuity"in curvePoint) {curvePointArr.push(curvePoint["continuity"][1]);} curvePoints.push(curvePointArr);}} return curvePoints;};jamHelpers.toRationalPointList=function(rationalPointsArr) {var data=rationalPointsArr[0];var unit=rationalPointsArr[1];var rationalPointListArr=[];for(var i=0;i<data.length;i++) {rationalPointListArr.push (["<object>",["rationalPoint",{"horizontal":toUnitDouble(data[i][0],unit),"vertical":toUnitDouble(data[i][1],unit)}]]);} return["<list>",rationalPointListArr];};jamHelpers.toPathComponentList=function(pathComponents) {var pathComponentList;if(pathComponents.constructor===Object) {var unit;if("unit"in pathComponents) {unit=pathComponents["unit"];} var data=pathComponents["pathComponents"];function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue;var restoredList;switch(key) {case"closedSubpath":case"smooth":case"windingFill":typedValue=["<boolean>",value];break;case"shapeOperation":typedValue=["<enumerated>",["shapeOperation",value]];break;case"horizontal":case"vertical":typedValue=toUnitDouble(value,unit);break;case"anchor":case"backward":case"forward":typedValue=["<object>",["point",restoreDesc(value)]];break;case"subpathListKey":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["subpathsList",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"points":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["pathPoint",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"pathComponents":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["pathComponent",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;default:typedValue=null;break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} pathComponentList=restoreDesc({"pathComponents":data})["pathComponents"];} else if(pathComponents.constructor===Array) {var pathComponentListArr=[];var data=pathComponents[0];var unit=pathComponents[1];for(var i=0;i<data.length;i++) {var shapeOperation=data[i][0];var subpaths=data[i][1];var windingFill=data[i][2];var subpathArr=[];for(var j=0;j<subpaths.length;j++) {var points=subpaths[j][0];var closedSubpath=subpaths[j][1];var pointArr=[];for(var k=0;k<points.length;k++) {var point=points[k];switch(point.length) {case 1:pointArr.push (["<object>",["pathPoint",{"anchor":["<object>",["point",{"horizontal":toUnitDouble(point[0][0],unit),"vertical":toUnitDouble(point[0][1],unit)}]]}]]);break;case 3:case 4:pointArr.push (["<object>",["pathPoint",{"anchor":["<object>",["point",{"horizontal":toUnitDouble(point[0][0],unit),"vertical":toUnitDouble(point[0][1],unit)}]],"forward":["<object>",["point",{"horizontal":toUnitDouble(point[1][0],unit),"vertical":toUnitDouble(point[1][1],unit)}]],"backward":["<object>",["point",{"horizontal":toUnitDouble(point[2][0],unit),"vertical":toUnitDouble(point[2][1],unit)}]],"smooth":["<boolean>",point[3]||false]}]]);break;}} var subpath={};if(closedSubpath) {subpath["closedSubpath"]=["<boolean>",closedSubpath];} subpath["points"]=["<list>",pointArr];subpathArr.push(["<object>",["subpathsList",subpath]]);} var pathComponent={};pathComponent["shapeOperation"]=["<enumerated>",["shapeOperation",shapeOperation]];if(windingFill) {pathComponent["windingFill"]=["<boolean>",windingFill];} pathComponent["subpathListKey"]=["<list>",subpathArr];pathComponentListArr.push(["<object>",["pathComponent",pathComponent]]);} pathComponentList=["<list>",pathComponentListArr];} return pathComponentList;};jamHelpers.fromPathComponentList=function(pathComponentList,explicit) {var pathComponents;if(explicit) {pathComponents={};var unit;var done=false;function getUnitHook(desc,key) {if(!done) {if(key==="horizontal") {var value=desc[key];if(value[0]==="<unitDouble>") {unit=value[1][0];} done=true;}} return undefined;} pathComponents["pathComponents"]=jamEngine.simplifyList(pathComponentList,getUnitHook);if(unit) {pathComponents["unit"]=unit;}} else {pathComponents=[];var normalizedPathComponentList=jamEngine.normalizeJsonItem(pathComponentList,{meaningfulIds:true,parseFriendly:true});var data=[];var unit;function getValue(coordinate) {var value;switch(coordinate[0]) {case"<unitDouble>":unit=coordinate[1][0];value=coordinate[1][1];break;case"<double>":unit=undefined;value=coordinate[1];break;} return value;} var pathComponentListArr=normalizedPathComponentList[1];for(var i=0;i<pathComponentListArr.length;i++) {var pathComponent=pathComponentListArr[i][1][1];var shapeOperation=pathComponent["shapeOperation"][1][1];var windingFill=("windingFill"in pathComponent)?pathComponent["windingFill"][1]:false;var subpathsArr=[];var subpathListArr=pathComponent["subpathListKey"][1];for(var j=0;j<subpathListArr.length;j++) {var subpathsList=subpathListArr[j][1][1];var closedSubpath=("closedSubpath"in subpathsList)?subpathsList["closedSubpath"][1]:false;var pathPointsArr=[];var pointsArr=subpathsList["points"][1];for(var k=0;k<pointsArr.length;k++) {var pathPoint=pointsArr[k][1][1];var pathPointArr=[];var anchor=pathPoint["anchor"][1][1];pathPointArr.push([getValue(anchor["horizontal"]),getValue(anchor["vertical"])]);if("forward"in pathPoint) {var forward=pathPoint["forward"][1][1];pathPointArr.push([getValue(forward["horizontal"]),getValue(forward["vertical"])]);} if("backward"in pathPoint) {var backward=pathPoint["backward"][1][1];pathPointArr.push([getValue(backward["horizontal"]),getValue(backward["vertical"])]);} var smooth=("smooth"in pathPoint)?pathPoint["smooth"][1]:false;if(smooth) {pathPointArr.push(smooth);} pathPointsArr.push(pathPointArr);} var subpathArr=[];subpathArr.push(pathPointsArr);if(closedSubpath) {subpathArr.push(closedSubpath);} subpathsArr.push(subpathArr);} var pathComponentArr=[];pathComponentArr.push(shapeOperation);pathComponentArr.push(subpathsArr);if(windingFill) {pathComponentArr.push(windingFill);} data.push(pathComponentArr);} pathComponents.push(data);if(unit) {pathComponents.push(unit);}} return pathComponents;};var namedColorsSets={"css":"w3c","svg":"w3c","w3c":{"colorClass":"RGBColor","colorNames":{"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":"darkgray","darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":"darkslategray","darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":"dimgray","dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":"gray","honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":"lightgray","lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":"lightslategray","lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":"slategray","snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]},"fallbackColor":"black","info":["http://www.w3.org/TR/css3-color/#svg-color","http://www.w3.org/TR/SVG/types.html#ColorKeywords","http://en.wikipedia.org/wiki/X11_color_names"]},"x11":{"colorClass":"RGBColor","colorNames":{"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"antiquewhite1":[255,239,219],"antiquewhite2":[238,223,204],"antiquewhite3":[205,192,176],"antiquewhite4":[139,131,120],"aquamarine":[127,255,212],"aquamarine1":[127,255,212],"aquamarine2":[118,238,198],"aquamarine3":[102,205,170],"aquamarine4":[69,139,116],"azure":[240,255,255],"azure1":[240,255,255],"azure2":[224,238,238],"azure3":[193,205,205],"azure4":[131,139,139],"beige":[245,245,220],"bisque":[255,228,196],"bisque1":[255,228,196],"bisque2":[238,213,183],"bisque3":[205,183,158],"bisque4":[139,125,107],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blue1":[0,0,255],"blue2":[0,0,238],"blue3":[0,0,205],"blue4":[0,0,139],"blueviolet":[138,43,226],"brown":[165,42,42],"brown1":[255,64,64],"brown2":[238,59,59],"brown3":[205,51,51],"brown4":[139,35,35],"burlywood":[222,184,135],"burlywood1":[255,211,155],"burlywood2":[238,197,145],"burlywood3":[205,170,125],"burlywood4":[139,115,85],"cadetblue":[95,158,160],"cadetblue1":[152,245,255],"cadetblue2":[142,229,238],"cadetblue3":[122,197,205],"cadetblue4":[83,134,139],"chartreuse":[127,255,0],"chartreuse1":[127,255,0],"chartreuse2":[118,238,0],"chartreuse3":[102,205,0],"chartreuse4":[69,139,0],"chocolate":[210,105,30],"chocolate1":[255,127,36],"chocolate2":[238,118,33],"chocolate3":[205,102,29],"chocolate4":[139,69,19],"coral":[255,127,80],"coral1":[255,114,86],"coral2":[238,106,80],"coral3":[205,91,69],"coral4":[139,62,47],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"cornsilk1":[255,248,220],"cornsilk2":[238,232,205],"cornsilk3":[205,200,177],"cornsilk4":[139,136,120],"cyan":[0,255,255],"cyan1":[0,255,255],"cyan2":[0,238,238],"cyan3":[0,205,205],"cyan4":[0,139,139],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgoldenrod1":[255,185,15],"darkgoldenrod2":[238,173,14],"darkgoldenrod3":[205,149,12],"darkgoldenrod4":[139,101,8],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":"darkgray","darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkolivegreen1":[202,255,112],"darkolivegreen2":[188,238,104],"darkolivegreen3":[162,205,90],"darkolivegreen4":[110,139,61],"darkorange":[255,140,0],"darkorange1":[255,127,0],"darkorange2":[238,118,0],"darkorange3":[205,102,0],"darkorange4":[139,69,0],"darkorchid":[153,50,204],"darkorchid1":[191,62,255],"darkorchid2":[178,58,238],"darkorchid3":[154,50,205],"darkorchid4":[104,34,139],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkseagreen1":[193,255,193],"darkseagreen2":[180,238,180],"darkseagreen3":[155,205,155],"darkseagreen4":[105,139,105],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategray1":[151,255,255],"darkslategray2":[141,238,238],"darkslategray3":[121,205,205],"darkslategray4":[82,139,139],"darkslategrey":"darkslategray","darkslategrey1":"darkslategray1","darkslategrey2":"darkslategray2","darkslategrey3":"darkslategray3","darkslategrey4":"darkslategray4","darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deeppink1":[255,20,147],"deeppink2":[238,18,137],"deeppink3":[205,16,118],"deeppink4":[139,10,80],"deepskyblue":[0,191,255],"deepskyblue1":[0,191,255],"deepskyblue2":[0,178,238],"deepskyblue3":[0,154,205],"deepskyblue4":[0,104,139],"dimgray":[105,105,105],"dimgrey":"dimgray","dodgerblue":[30,144,255],"dodgerblue1":[30,144,255],"dodgerblue2":[28,134,238],"dodgerblue3":[24,116,205],"dodgerblue4":[16,78,139],"firebrick":[178,34,34],"firebrick1":[255,48,48],"firebrick2":[238,44,44],"firebrick3":[205,38,38],"firebrick4":[139,26,26],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"gold1":[255,215,0],"gold2":[238,201,0],"gold3":[205,173,0],"gold4":[139,117,0],"goldenrod":[218,165,32],"goldenrod1":[255,193,37],"goldenrod2":[238,180,34],"goldenrod3":[205,155,29],"goldenrod4":[139,105,20],"gray":[190,190,190],"gray0":[0,0,0],"gray1":[3,3,3],"gray2":[5,5,5],"gray3":[8,8,8],"gray4":[10,10,10],"gray5":[13,13,13],"gray6":[15,15,15],"gray7":[18,18,18],"gray8":[20,20,20],"gray9":[23,23,23],"gray10":[26,26,26],"gray11":[28,28,28],"gray12":[31,31,31],"gray13":[33,33,33],"gray14":[36,36,36],"gray15":[38,38,38],"gray16":[41,41,41],"gray17":[43,43,43],"gray18":[46,46,46],"gray19":[48,48,48],"gray20":[51,51,51],"gray21":[54,54,54],"gray22":[56,56,56],"gray23":[59,59,59],"gray24":[61,61,61],"gray25":[64,64,64],"gray26":[66,66,66],"gray27":[69,69,69],"gray28":[71,71,71],"gray29":[74,74,74],"gray30":[77,77,77],"gray31":[79,79,79],"gray32":[82,82,82],"gray33":[84,84,84],"gray34":[87,87,87],"gray35":[89,89,89],"gray36":[92,92,92],"gray37":[94,94,94],"gray38":[97,97,97],"gray39":[99,99,99],"gray40":[102,102,102],"gray41":[105,105,105],"gray42":[107,107,107],"gray43":[110,110,110],"gray44":[112,112,112],"gray45":[115,115,115],"gray46":[117,117,117],"gray47":[120,120,120],"gray48":[122,122,122],"gray49":[125,125,125],"gray50":[127,127,127],"gray51":[130,130,130],"gray52":[133,133,133],"gray53":[135,135,135],"gray54":[138,138,138],"gray55":[140,140,140],"gray56":[143,143,143],"gray57":[145,145,145],"gray58":[148,148,148],"gray59":[150,150,150],"gray60":[153,153,153],"gray61":[156,156,156],"gray62":[158,158,158],"gray63":[161,161,161],"gray64":[163,163,163],"gray65":[166,166,166],"gray66":[168,168,168],"gray67":[171,171,171],"gray68":[173,173,173],"gray69":[176,176,176],"gray70":[179,179,179],"gray71":[181,181,181],"gray72":[184,184,184],"gray73":[186,186,186],"gray74":[189,189,189],"gray75":[191,191,191],"gray76":[194,194,194],"gray77":[196,196,196],"gray78":[199,199,199],"gray79":[201,201,201],"gray80":[204,204,204],"gray81":[207,207,207],"gray82":[209,209,209],"gray83":[212,212,212],"gray84":[214,214,214],"gray85":[217,217,217],"gray86":[219,219,219],"gray87":[222,222,222],"gray88":[224,224,224],"gray89":[227,227,227],"gray90":[229,229,229],"gray91":[232,232,232],"gray92":[235,235,235],"gray93":[237,237,237],"gray94":[240,240,240],"gray95":[242,242,242],"gray96":[245,245,245],"gray97":[247,247,247],"gray98":[250,250,250],"gray99":[252,252,252],"gray100":[255,255,255],"green":[0,255,0],"green1":[0,255,0],"green2":[0,238,0],"green3":[0,205,0],"green4":[0,139,0],"greenyellow":[173,255,47],"grey":"gray","grey0":"gray0","grey1":"gray1","grey2":"gray2","grey3":"gray3","grey4":"gray4","grey5":"gray5","grey6":"gray6","grey7":"gray7","grey8":"gray8","grey9":"gray9","grey10":"gray10","grey11":"gray11","grey12":"gray12","grey13":"gray13","grey14":"gray14","grey15":"gray15","grey16":"gray16","grey17":"gray17","grey18":"gray18","grey19":"gray19","grey20":"gray20","grey21":"gray21","grey22":"gray22","grey23":"gray23","grey24":"gray24","grey25":"gray25","grey26":"gray26","grey27":"gray27","grey28":"gray28","grey29":"gray29","grey30":"gray30","grey31":"gray31","grey32":"gray32","grey33":"gray33","grey34":"gray34","grey35":"gray35","grey36":"gray36","grey37":"gray37","grey38":"gray38","grey39":"gray39","grey40":"gray40","grey41":"gray41","grey42":"gray42","grey43":"gray43","grey44":"gray44","grey45":"gray45","grey46":"gray46","grey47":"gray47","grey48":"gray48","grey49":"gray49","grey50":"gray50","grey51":"gray51","grey52":"gray52","grey53":"gray53","grey54":"gray54","grey55":"gray55","grey56":"gray56","grey57":"gray57","grey58":"gray58","grey59":"gray59","grey60":"gray60","grey61":"gray61","grey62":"gray62","grey63":"gray63","grey64":"gray64","grey65":"gray65","grey66":"gray66","grey67":"gray67","grey68":"gray68","grey69":"gray69","grey70":"gray70","grey71":"gray71","grey72":"gray72","grey73":"gray73","grey74":"gray74","grey75":"gray75","grey76":"gray76","grey77":"gray77","grey78":"gray78","grey79":"gray79","grey80":"gray80","grey81":"gray81","grey82":"gray82","grey83":"gray83","grey84":"gray84","grey85":"gray85","grey86":"gray86","grey87":"gray87","grey88":"gray88","grey89":"gray89","grey90":"gray90","grey91":"gray91","grey92":"gray92","grey93":"gray93","grey94":"gray94","grey95":"gray95","grey96":"gray96","grey97":"gray97","grey98":"gray98","grey99":"gray99","grey100":"gray100","honeydew":[240,255,240],"honeydew1":[240,255,240],"honeydew2":[224,238,224],"honeydew3":[193,205,193],"honeydew4":[131,139,131],"hotpink":[255,105,180],"hotpink1":[255,110,180],"hotpink2":[238,106,167],"hotpink3":[205,96,144],"hotpink4":[139,58,98],"indianred":[205,92,92],"indianred1":[255,106,106],"indianred2":[238,99,99],"indianred3":[205,85,85],"indianred4":[139,58,58],"ivory":[255,255,240],"ivory1":[255,255,240],"ivory2":[238,238,224],"ivory3":[205,205,193],"ivory4":[139,139,131],"khaki":[240,230,140],"khaki1":[255,246,143],"khaki2":[238,230,133],"khaki3":[205,198,115],"khaki4":[139,134,78],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lavenderblush1":[255,240,245],"lavenderblush2":[238,224,229],"lavenderblush3":[205,193,197],"lavenderblush4":[139,131,134],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lemonchiffon1":[255,250,205],"lemonchiffon2":[238,233,191],"lemonchiffon3":[205,201,165],"lemonchiffon4":[139,137,112],"lightblue":[173,216,230],"lightblue1":[191,239,255],"lightblue2":[178,223,238],"lightblue3":[154,192,205],"lightblue4":[104,131,139],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightcyan1":[224,255,255],"lightcyan2":[209,238,238],"lightcyan3":[180,205,205],"lightcyan4":[122,139,139],"lightgoldenrod":[238,221,130],"lightgoldenrod1":[255,236,139],"lightgoldenrod2":[238,220,130],"lightgoldenrod3":[205,190,112],"lightgoldenrod4":[139,129,76],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":"lightgray","lightpink":[255,182,193],"lightpink1":[255,174,185],"lightpink2":[238,162,173],"lightpink3":[205,140,149],"lightpink4":[139,95,101],"lightsalmon":[255,160,122],"lightsalmon1":[255,160,122],"lightsalmon2":[238,149,114],"lightsalmon3":[205,129,98],"lightsalmon4":[139,87,66],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightskyblue1":[176,226,255],"lightskyblue2":[164,211,238],"lightskyblue3":[141,182,205],"lightskyblue4":[96,123,139],"lightslateblue":[132,112,255],"lightslategray":[119,136,153],"lightslategrey":"lightslategray","lightsteelblue":[176,196,222],"lightsteelblue1":[202,225,255],"lightsteelblue2":[188,210,238],"lightsteelblue3":[162,181,205],"lightsteelblue4":[110,123,139],"lightyellow":[255,255,224],"lightyellow1":[255,255,224],"lightyellow2":[238,238,209],"lightyellow3":[205,205,180],"lightyellow4":[139,139,122],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"magenta1":[255,0,255],"magenta2":[238,0,238],"magenta3":[205,0,205],"magenta4":[139,0,139],"maroon":[176,48,96],"maroon1":[255,52,179],"maroon2":[238,48,167],"maroon3":[205,41,144],"maroon4":[139,28,98],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumorchid1":[224,102,255],"mediumorchid2":[209,95,238],"mediumorchid3":[180,82,205],"mediumorchid4":[122,55,139],"mediumpurple":[147,112,219],"mediumpurple1":[171,130,255],"mediumpurple2":[159,121,238],"mediumpurple3":[137,104,205],"mediumpurple4":[93,71,139],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"mistyrose1":[255,228,225],"mistyrose2":[238,213,210],"mistyrose3":[205,183,181],"mistyrose4":[139,125,123],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navajowhite1":[255,222,173],"navajowhite2":[238,207,161],"navajowhite3":[205,179,139],"navajowhite4":[139,121,94],"navy":[0,0,128],"navyblue":"navy","oldlace":[253,245,230],"olivedrab":[107,142,35],"olivedrab1":[192,255,62],"olivedrab2":[179,238,58],"olivedrab3":[154,205,50],"olivedrab4":[105,139,34],"orange":[255,165,0],"orange1":[255,165,0],"orange2":[238,154,0],"orange3":[205,133,0],"orange4":[139,90,0],"orangered":[255,69,0],"orangered1":[255,69,0],"orangered2":[238,64,0],"orangered3":[205,55,0],"orangered4":[139,37,0],"orchid":[218,112,214],"orchid1":[255,131,250],"orchid2":[238,122,233],"orchid3":[205,105,201],"orchid4":[139,71,137],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"palegreen1":[154,255,154],"palegreen2":[144,238,144],"palegreen3":[124,205,124],"palegreen4":[84,139,84],"paleturquoise":[175,238,238],"paleturquoise1":[187,255,255],"paleturquoise2":[174,238,238],"paleturquoise3":[150,205,205],"paleturquoise4":[102,139,139],"palevioletred":[219,112,147],"palevioletred1":[255,130,171],"palevioletred2":[238,121,159],"palevioletred3":[205,104,137],"palevioletred4":[139,71,93],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peachpuff1":[255,218,185],"peachpuff2":[238,203,173],"peachpuff3":[205,175,149],"peachpuff4":[139,119,101],"peru":[205,133,63],"pink":[255,192,203],"pink1":[255,181,197],"pink2":[238,169,184],"pink3":[205,145,158],"pink4":[139,99,108],"plum":[221,160,221],"plum1":[255,187,255],"plum2":[238,174,238],"plum3":[205,150,205],"plum4":[139,102,139],"powderblue":[176,224,230],"purple":[160,32,240],"purple1":[155,48,255],"purple2":[145,44,238],"purple3":[125,38,205],"purple4":[85,26,139],"red":[255,0,0],"red1":[255,0,0],"red2":[238,0,0],"red3":[205,0,0],"red4":[139,0,0],"rosybrown":[188,143,143],"rosybrown1":[255,193,193],"rosybrown2":[238,180,180],"rosybrown3":[205,155,155],"rosybrown4":[139,105,105],"royalblue":[65,105,225],"royalblue1":[72,118,255],"royalblue2":[67,110,238],"royalblue3":[58,95,205],"royalblue4":[39,64,139],"saddlebrown":[139,69,19],"salmon":[250,128,114],"salmon1":[255,140,105],"salmon2":[238,130,98],"salmon3":[205,112,84],"salmon4":[139,76,57],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seagreen1":[84,255,159],"seagreen2":[78,238,148],"seagreen3":[67,205,128],"seagreen4":[46,139,87],"seashell":[255,245,238],"seashell1":[255,245,238],"seashell2":[238,229,222],"seashell3":[205,197,191],"seashell4":[139,134,130],"sienna":[160,82,45],"sienna1":[255,130,71],"sienna2":[238,121,66],"sienna3":[205,104,57],"sienna4":[139,71,38],"skyblue":[135,206,235],"skyblue1":[135,206,255],"skyblue2":[126,192,238],"skyblue3":[108,166,205],"skyblue4":[74,112,139],"slateblue":[106,90,205],"slateblue1":[131,111,255],"slateblue2":[122,103,238],"slateblue3":[105,89,205],"slateblue4":[71,60,139],"slategray":[112,128,144],"slategray1":[198,226,255],"slategray2":[185,211,238],"slategray3":[159,182,205],"slategray4":[108,123,139],"slategrey":"slategray","slategrey1":"slategray1","slategrey2":"slategray2","slategrey3":"slategray3","slategrey4":"slategray4","snow":[255,250,250],"snow1":[255,250,250],"snow2":[238,233,233],"snow3":[205,201,201],"snow4":[139,137,137],"springgreen":[0,255,127],"springgreen1":[0,255,127],"springgreen2":[0,238,118],"springgreen3":[0,205,102],"springgreen4":[0,139,69],"steelblue":[70,130,180],"steelblue1":[99,184,255],"steelblue2":[92,172,238],"steelblue3":[79,148,205],"steelblue4":[54,100,139],"tan":[210,180,140],"tan1":[255,165,79],"tan2":[238,154,73],"tan3":[205,133,63],"tan4":[139,90,43],"thistle":[216,191,216],"thistle1":[255,225,255],"thistle2":[238,210,238],"thistle3":[205,181,205],"thistle4":[139,123,139],"tomato":[255,99,71],"tomato1":[255,99,71],"tomato2":[238,92,66],"tomato3":[205,79,57],"tomato4":[139,54,38],"turquoise":[64,224,208],"turquoise1":[0,245,255],"turquoise2":[0,229,238],"turquoise3":[0,197,205],"turquoise4":[0,134,139],"violet":[238,130,238],"violetred":[208,32,144],"violetred1":[255,62,150],"violetred2":[238,58,140],"violetred3":[205,50,120],"violetred4":[139,34,82],"wheat":[245,222,179],"wheat1":[255,231,186],"wheat2":[238,216,174],"wheat3":[205,186,150],"wheat4":[139,126,102],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellow1":[255,255,0],"yellow2":[238,238,0],"yellow3":[205,205,0],"yellow4":[139,139,0],"yellowgreen":[154,205,50]},"fallbackColor":"white","info":["http://www.thomas-guettler.de/rgb.txt.html","http://www.astrouw.edu.pl/~jskowron/colors-x11/rgb.html","file://localhost/usr/X11/share/X11/rgb.txt"]}};jamHelpers.defineNamedColorsSet=function(setName,setData) {var setName=setName.replace(/\s/g,"").toLowerCase();if(setName in namedColorsSets) {throw new Error("\n[jamHelpers.defineNamedColorsSet] Named colors set already exists: "+setName);} else if(setData.constructor!==Object) {throw new Error("\n[jamHelpers.defineNamedColorsSet] JavaScript object expected");} else if(!(("colorClass"in setData)&&("colorNames"in setData))) {throw new Error("\n[jamHelpers.defineNamedColorsSet] Data syntax error");} else {namedColorsSets[setName]=setData;}};function getNamedColorsSet(setName) {var setName=setName.replace(/\s/g,"").toLowerCase();if(setName in namedColorsSets) {var namedColorsSet=namedColorsSets[setName];if(typeof namedColorsSet==='string') {namedColorsSet=namedColorsSets[namedColorsSet];}} else {throw new Error("\n[jamHelpers getNamedColorsSet] Unknown named colors set: "+setName);} return namedColorsSet;} jamHelpers.enumerateNamedColors=function(setName,excludeVariants) {var namedColorsSet=getNamedColorsSet(setName);var colorNames=namedColorsSet["colorNames"];var names=[];for(var colorName in colorNames) {if(colorNames.hasOwnProperty(colorName)) {if((!excludeVariants)||(typeof colorNames[colorName]!=='string')) {names.push(colorName);}}} return names;};function namedColor(setName,colorName) {var namedColorsSet=getNamedColorsSet(setName);var colorNames=namedColorsSet["colorNames"];var colorName=colorName.replace(/\s/g,"").toLowerCase();if(!(colorName in colorNames)) {if("fallbackColor"in namedColorsSet) {colorName=namedColorsSet["fallbackColor"];} else {throw new Error("\n[jamHelpers namedColor] Unknown color name: "+colorName);}} var colorComponents=colorNames[colorName];return[namedColorsSet["colorClass"],(typeof colorComponents==='string')?colorNames[colorComponents]:colorComponents];} jamHelpers.nameToColorObject=function(setName,colorName) {return this.toColorObject(namedColor(setName,colorName));};function hexToRGBColor(hexColorString) {var result=hexColorString.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/);if(result) {var rgb=result[1];if(rgb.length===3) {rgb=rgb[0]+rgb[0]+rgb[1]+rgb[1]+rgb[2]+rgb[2];} var color=[parseInt(rgb.slice(0,2),16),parseInt(rgb.slice(2,4),16),parseInt(rgb.slice(4,6),16)];} else {throw new Error("\n[jamHelpers hexToRGBColor] Invalid HTML/CSS hexadecimal string: "+hexColorString);} return color;} jamHelpers.hexToColorObject=function(hexColorString) {return this.toColorObject(["RGBColor",hexToRGBColor(hexColorString)]);};function hexFromRGBColor(RGBColor,noSign,lowercase) {if((RGBColor.constructor===Array)&&(RGBColor.length===3)) {var red=Math.round(RGBColor[0]);var green=Math.round(RGBColor[1]);var blue=Math.round(RGBColor[2]);var hexaDigits=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"];var hexColorString=(noSign)?"":"#";hexColorString+=hexaDigits[(red&0xF0)>>4]+hexaDigits[red&0x0F];hexColorString+=hexaDigits[(green&0xF0)>>4]+hexaDigits[green&0x0F];hexColorString+=hexaDigits[(blue&0xF0)>>4]+hexaDigits[blue&0x0F];if(lowercase) {hexColorString=hexColorString.toLowerCase();}} else {throw new Error("\n[jamHelpers hexFromRGBColor] Invalid RGB color array");} return hexColorString;} jamHelpers.hexFromColorObject=function(colorObject,noSign,lowercase) {var color=jamHelpers.fromColorObject(colorObject);return(color[0]==="RGBColor")?hexFromRGBColor(color[1],noSign,lowercase):null;};}());}
